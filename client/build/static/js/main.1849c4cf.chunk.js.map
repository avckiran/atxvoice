{"version":3,"sources":["assets/atx-voice-full-logo.png","actions/events.js","actions/types.js","components/Spinner.jsx","components/Events/EventsCarousel.js","actions/posts.js","components/Posts/BlogsArea.js","components/TwitterFeed.js","actions/twitter.js","utils/setAuthToken.js","actions/user.js","components/Layout.js","reducers/weather.js","reducers/formAlert.js","reducers/users.js","reducers/tweets.js","reducers/posts.js","reducers/events.js","reducers/index.js","store.js","components/Forms/Alert.js","components/Forms/Signup.js","components/Forms/Login.js","components/Users/Profile.js","components/Weather.js","components/Navbar.js","actions/weather.js","components/Posts/Post.js","components/Posts/CreatePost.js","components/Posts/EditPost.js","components/Users/EditProfile.js","components/Events/Events.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","getEvents","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","type","payload","data","t0","console","error","stop","_x","apply","this","arguments","Spinner","react_default","createElement","className","role","connect","state","events","useEffect","loading","imgStyle","width","height","objectFit","opacity","id","components_Spinner","Carousel","filter","event","venue","address","address_1","slice","map","Item","key","src","logo","original","url","alt","style","Caption","background","react_router_dom","to","name","text","dist_default","format","start","local","timezone","tzText","length","substr","getPosts","post","cover_img","log","unloadCurrentPost","_ref3","_callee3","_context3","_x3","posts","isAuthenticated","user","objectPosition","cursor","link","react","reverse","_id","title","created_date","createdDate","user_name","firstName","lastName","desc","content","replace","concat","fontSize","tweets","getTwitterFeed","latestTweets","forEach","tweet","push","id_str","created_at","retweeted_status","distinctTweetIds","toConsumableArray","Set","index_es","tweetId","setAuthToken","token","defaults","headers","common","formAlert","msg","alert","uuid","v4","loadUser","localStorage","Events_EventsCarousel","Posts_BlogsArea","components_TwitterFeed","initialState","getItem","userInfo","fileUploaded","uploadedFile","filePath","fileName","coverImgUploaded","coverImgDetails","combineReducers","weather","undefined","action","objectSpread","location","alerts","setItem","removeItem","onePost","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Alert","data-dismiss","registerUser","profileImage","_ref2","_callee2","config","email","password","bio","interests","body","errors","_errors","_context2","Content-Type","JSON","stringify","Array","isArray","response","_x2","fileUpload","file","_ref9","_callee8","profilePicture","_context8","FormData","append","_x8","_useState","useState","password2","picture","submitBtn","_useState2","slicedToArray","formData","setFormData","_useState3","_useState4","setFile","_useState5","_useState6","setFileName","onChange","e","defineProperty","target","value","react_router","Forms_Alert","onSubmit","preventDefault","window","scrollTo","size","formSubmit","placeholder","required","minLength","maxLength","files","onFileChange","accept","htmlFor","onClick","checked","onRulesAgree","disabled","login","_ref4","_ref5","_callee4","_context4","_x4","deleteUser","userId","_ref7","_callee6","_context6","delete","_x6","confirm","interest","toUpperCase","Weather","icon","loc_text","city","Math","ceil","temperature","getCurrentWeather","lat","long","getCity","logout","_ref6","_callee5","_context5","_x5","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","err","guestLinks","authLinks","overflow","borderRadius","display","margin","marginLeft","components_Weather","data-toggle","data-target","getPost","postId","deletePost","likePost","_callee7","_context7","put","_x7","addComment","comment","_ref8","deleteComment","commentId","_callee9","_context9","_x9","match","params","setComment","likeThisPost","profilePic","maxHeight","dangerouslySetInnerHTML","__html","likes","like","profile_img","commentSubmit","rows","comments","parse","comment_id","addPost","message","coverImgUpload","_ref10","_callee10","coverImg","_context10","_x10","lib_default","contentUpdate","modules","toolbar","list","formats","editPost","defaultValue","editUser","formSubmitted","setFormSubmitted","join","editCurrentUser","img","summary","time","href","rel","App","es","components_Navbar","exact","path","component","Layout","Signup","Login","Profile","CreatePost","Post","EditPost","EditProfile","Events","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.1849c4cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/atx-voice-full-logo.4029c2b0.png\";","import {\n    GET_EVENTS\n} from './types';\nimport axios from 'axios';\n\n\nexport const getEvents = () => async dispatch => {\n    try{\n        const res = await axios.get('/api/events/');\n        // console.log(\"action data\", res.data);\n\n        if(res){\n            dispatch({\n                type: GET_EVENTS,\n                payload: res.data\n            })\n        }\n    }catch(err){\n        console.error(err);\n    }\n}\n","export const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\nexport const GET_CITY = 'GET_CITY';\nexport const FORM_ALERT = 'FORM_ALERT';\nexport const USER_REGISTERED = 'USER_REGISTERED';\nexport const USER_LOADED = 'USER_LOADED';\nexport const USER_DELETED = 'USER_DELETED';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const GET_TWITTER_FEED = 'GET_TWITTER_FEED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const REMOVE_CURRENT_POST = 'REMOVE_CURRENT_POST';\nexport const POST_ADDED = 'POST_ADDED';\nexport const POST_UPDATED = 'POST_UPDATED';\nexport const POST_DELETED = 'POST_DELETED';\nexport const POST_LIKED = 'POST_LIKED';\nexport const POST_UNLIKED = 'POST_UNLIKED';\nexport const UNKNOWN_ERROR = 'UNKNOWN_ERROR';\nexport const COMMENT_ADDED = 'COMMENT_ADDED';\nexport const COMMENT_DELETED = 'COMMENT_DELETED';\nexport const FILE_UPLOADED = 'FILE_UPLOADED';\nexport const GET_EVENTS = 'GET_EVENTS';\nexport const COVER_IMG_UPLOADED = 'COVER_IMG_UPLOADED';\n\n\n\n\n","import React from 'react'\n\nconst Spinner = () => {\n    return (\n        <div className=\"text-center mt-5\"> \n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner \n","import React, {useEffect} from 'react';\nimport {getEvents} from '../../actions/events';\nimport {connect} from 'react-redux';\nimport {Carousel} from 'react-bootstrap';\nimport Spinner from '../Spinner';\nimport Moment from 'react-moment';\nimport {Link} from 'react-router-dom';\n\n\nconst EventsCarousel = ({events, getEvents}) => {\n\n    useEffect(()=> {\n        if(events.loading){\n            getEvents();\n        }\n    },[getEvents, events.loading])\n\n    const imgStyle = {\n        \"width\":\"100%\",\n        // \"width\":\"300px\",\n        \"height\":\"400px\",\n        \"objectFit\":\"cover\",\n        \"opacity\": \"0.5\"\n    }\n\n    const tzText = timezone => {\n        switch(timezone){\n            case 'America/Chicago' : return 'CT'\n            case 'America/Los_Angeles' : return 'PT'\n            case 'America/New_York' : return 'ET'\n            case 'America/Denver' : return 'MT'\n            case 'America/Phoenix' : return 'MT'\n            default : return 'UNK'\n        }\n    }\n\n    return (\n       <header id=\"head-intro\" className=\"container mt-4\">\n           <div>\n              {events.loading ? <Spinner /> : <Carousel>\n                    {events.events.filter(event => event.venue.address.address_1).slice(0,5).map(event => (\n                          <Carousel.Item key={event.id} className=\"bg-dark\">\n                            <img \n                                className=\"d-block w-100\"\n                                src={event.logo.original.url? event.logo.original.url : ' '}\n                                alt=\"title\"\n                                style={imgStyle}\n                            />\n                            \n                            <Carousel.Caption className=\"text-white px-4\" style={{\"background\":\"rgba(0,0,0, 0.5\"}} >\n                                <Link to=\"/events\" className=\"text-white\"><h3 className=\"mb-3\">{event.name.text}</h3></Link>\n                                <div className=\"mb-2 d-flex justify-content-between\">\n                                    <div>\n                                    <i className=\"far fa-calendar-alt mr-2\"></i><Moment format=\"MMM DD, YY - h:mm A\">{event.start.local}</Moment>{` `}<span>{tzText(event.start.timezone)}</span>\n                                    </div>\n                                    <div><i className=\"fas fa-map-marker-alt mr-2\"></i>{\n                                        event.venue.address.address_1.length>30 ? event.venue.address.address_1.substr(0,30)+'...' : event.venue.address.address_1\n                                        }</div>\n                                </div>\n                            </Carousel.Caption>\n                            \n                        </Carousel.Item>\n                        ))\n                    }\n              </Carousel>\n                }\n           </div>\n       </header>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.events\n})\n\nexport default connect(mapStateToProps, {getEvents}) (EventsCarousel)\n","import {\n    GET_POSTS,\n    GET_POST,\n    REMOVE_CURRENT_POST,\n    POST_ADDED,\n    POST_UPDATED,\n    POST_DELETED,\n    POST_LIKED,\n    POST_UNLIKED,\n    COMMENT_ADDED,\n    COMMENT_DELETED,\n    COVER_IMG_UPLOADED,\n    UNKNOWN_ERROR\n} from './types';\nimport axios from 'axios';\n\nexport const getPosts = () => async dispatch => {\n    try{\n        const res = await axios.get('/api/posts');\n        const payload = res.data.filter(post => post.cover_img);\n        dispatch({\n            type: GET_POSTS,\n            payload\n        })\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const getPost = postId => async dispatch => {\n    try{\n        const res = await axios.get(`/api/posts/${postId}`)\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const unloadCurrentPost = () => async dispatch => {\n    dispatch({\n        type: REMOVE_CURRENT_POST\n    })\n}\n\nexport const addPost = (formData, cover_img) => async dispatch => {\n    if(formData){\n        try{\n            const {title, content} = formData;\n            const body = {title, content, cover_img}\n            console.log(body);\n            const res = await axios.post('/api/posts', body)\n            console.log(res);\n            dispatch({\n                type: POST_ADDED\n            })\n        }catch(err){\n            console.error(err.message);\n        }\n    }\n    \n}\n\nexport const editPost = (postId, formData) => async dispatch => {\n    try{\n        // console.log(formData);\n        await axios.put(`/api/posts/${postId}`, formData)\n        dispatch({\n            type: POST_UPDATED,\n\n        })\n\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const deletePost = postId => async dispatch => {\n    try{\n        const res = await axios.delete(`/api/posts/${postId}`)\n        if(res.data.msg === 'Post deleted successfully'){\n            dispatch({\n                type: POST_DELETED\n            })\n            unloadCurrentPost();\n        }else{\n            dispatch({\n                type: UNKNOWN_ERROR\n            })\n        }\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const likePost = postId => async dispatch => {\n    try{\n        const res = await axios.put(`/api/posts/like/${postId}`)\n        if(res) {\n            const post = await axios.get(`/api/posts/${postId}`)\n            // console.log('res', res);\n            // console.log('post', post);\n            if(res.data.msg === 'Post liked'){\n                dispatch({\n                    type: POST_LIKED,\n                    payload: post.data\n                })\n            }else{\n                dispatch({\n                    type: POST_UNLIKED,\n                    payload: post.data\n                })\n            }\n        }\n\n\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const addComment = (postId, comment) => async dispatch => {\n    try{\n        const res = await axios.put(`/api/posts/comment/${postId}`, {comment})\n        // console.log(res);\n        if(res.data.msg){\n            const post = await axios.get(`/api/posts/${postId}`)\n            dispatch({\n                type: COMMENT_ADDED,\n                payload: post.data\n            })\n        }\n\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try{\n        const res = await axios.delete(`/api/posts/${postId}/comment/${commentId}`);\n        if(res.data.msg){\n            const post = await axios.get(`/api/posts/${postId}`)\n            dispatch({\n                type: COMMENT_DELETED,\n                payload: post.data\n            })\n        }\n    }catch(err){\n        console.log(err);\n    }\n}\n\n// Cover Image upload\nexport const coverImgUpload = file => async dispatch => {\n    const coverImg = new FormData();\n    if(file){coverImg.append('file', file)};\n    try{\n        const res = await axios.post('/upload',coverImg, {\n            headers:{\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        if(res.data.fileName){\n            dispatch({\n                type:COVER_IMG_UPLOADED,\n                payload: res.data\n            })\n        }\n    }catch(err){\n        console.log(err);\n    }\n}","import React, {useEffect, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {getPosts} from '../../actions/posts';\nimport Spinner from '../Spinner';\nimport Moment from 'react-moment';\n\n\n\nconst BlogsArea = ({posts, getPosts, isAuthenticated}) => {\n\n    useEffect(() => {\n        getPosts();\n    },[getPosts]);\n\n\n    const smallCard2 = (id, cover_img, title, created_date, user_name, desc) => {\n        return(\n            <div className=\"m-2 p-2 pb-3 border-bottom\">\n                <li className=\"media mt-3\">\n                <Link to={`/post/${id}`}>\n                    <img className=\"img-fluid mr-3\" style={imgStyle} src={cover_img} alt='blog cover' />\n                </Link>\n                <div className=\"media-body\">\n                    <Link to={`/post/${id}`} className=\"text-dark\">\n                    <h5>{title}</h5>\n                    </Link>\n                        <p className=\"text-muted\" style={{'fontSize':'0.9rem'}}> {desc} </p>\n                        <div className=\"d-flex align-items-center justify-content-between mt-4\">\n                            <div>\n                                {/* <img src={user_profile_img} width=\"30px\" alt=\"\" className=\"img-fluid border rounded-circle\"/> */}\n                                <small><em><div className=\"d-md-inline d-sm-block nav-link text-dark pl-1\">{user_name}</div></em></small>\n                            </div>\n                            <div>\n                                <small><Moment format=\"MMM DD, YY\">{created_date}</Moment></small>\n                                \n                            </div>\n                        </div>\n                </div>\n                </li>\n            </div>\n        )\n    }\n\n    const imgStyle = {\n        width: '100px',\n        height: '100px',\n        // maxWidth: '150px',\n        objectFit: 'cover',\n        objectPosition:'0 0',\n        cursor: 'pointer'\n    }\n\n    const link = (\n        isAuthenticated ? '/post/new' : '/login'\n    )\n\n    return (\n        <div>\n            <div className=\"text-left\">\n                <Link to={link} className=\"btn btn-dark mb-3 align-left mt-4\">Create New Post</Link>\n            </div>\n            {posts.loading? <div> <Spinner /> </div>: \n                <Fragment>\n                {posts.posts.reverse().map(post => (\n                    <div key={post._id}>\n                        {smallCard2(post._id, post.cover_img, post.title, post.createdDate, post.user.firstName+' '+post.user.lastName, \n                        post.content.replace(/(<([^>]+)>)/ig,'').substr(0,100).replace(/&.*;/g,'')+'...')\n                        // striptags(post.content).substr(0,50)+'...')\n                        // replace(/(<([^>]+)>)/ig,'')\n                        // replace(/<[^>]+>/g, '')\n                        }\n                    </div>\n                ))}\n                \n                </Fragment>\n            }\n        </div>\n    )\n\n\n    \n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {getPosts})(BlogsArea);\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {getTwitterFeed} from '../actions/twitter';\n// import { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport Spinner from './Spinner'\n\nconst TwitterFeed = ({tweets, getTwitterFeed}) => {\n    useEffect(() => {\n        getTwitterFeed();\n    }, [getTwitterFeed])\n\n    const distinctTweetIds = [...new Set(tweets.tweets.map(tweet => (tweet.retweeted_status? tweet.retweeted_status.id_str : tweet.id )))];\n    \n    return (\n        <div>\n            {tweets.loading? <Spinner /> : (\n                distinctTweetIds.map(id => (\n                    <TwitterTweetEmbed key={id} tweetId={id} />\n                ))\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    tweets: state.tweets\n})\n\nexport default connect(mapStateToProps, {getTwitterFeed})(TwitterFeed)\n","import {\n    GET_TWITTER_FEED\n} from './types'\nimport axios from 'axios';\n\n// To get the twitter feed from backend API\n\nexport const getTwitterFeed = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/tweets/')\n        let payload = []\n        res.data.latestTweets.forEach(tweet => {\n            payload.push({\n                id: tweet.id_str,\n                text: tweet.text,\n                created_date: tweet.created_at,\n                user: tweet.user,\n                retweeted_status: tweet.retweeted_status\n            })\n        })\n        // console.log(payload);\n        dispatch({\n            type: GET_TWITTER_FEED,\n            payload\n        })\n        }catch(err){\n        console.log(err);\n    }\n}","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token){\n        axios.defaults.headers.common['x-auth-token'] = token;\n    }else{\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import {\n    FORM_ALERT,\n    USER_REGISTERED,\n    USER_LOADED,\n    USER_DELETED,\n    USER_UPDATED,\n    AUTH_ERROR,\n    LOGOUT,\n    LOGIN_SUCCESS,\n    FILE_UPLOADED\n} from './types';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\n\n\n// To display form-validation errors both client and server side\nexport const formAlert = msg => async dispatch => {\n    if(msg){\n        const alert = {\n            id: uuid.v4(),\n            text: msg\n        }\n        dispatch({\n            type: FORM_ALERT,\n            payload: alert\n        })\n    }\n}\n\n// To register a new Users\n// TODO: need to securely send the form data. \nexport const registerUser = (data, profileImage) => async dispatch => {\n    if(data){\n        try{\n            const config = {\n                headers:{'Content-Type': 'application/json'}\n            }\n            const{firstName, lastName, email, password, bio, interests, location } = data;\n            const body = JSON.stringify({firstName, lastName, email, password, bio, interests, profileImage, location});\n            console.log(body);\n            // const res = {data:{errors:[0]}};\n            const res = await axios.post('/api/user', body, config);\n            const errors = res.data.errors;\n            if(!errors){\n                dispatch({\n                    type: USER_REGISTERED,\n                    payload: res.data\n                })\n                dispatch(loadUser());\n            }else{\n                Array.isArray(errors) ? res.data.errors.forEach(error => dispatch(formAlert(error.msg))): dispatch(formAlert(errors))\n            }\n            \n        }catch(err){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error => dispatch(formAlert(error.msg)))\n            }\n        }\n    }\n}\n\n//Load user's auth-token into Axios headers and user's data to State\n\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try{\n        const res = await axios.get('/api/user/me/');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    }catch(err){\n        dispatch({\n            type: AUTH_ERROR,\n            payload: err\n        })\n    }\n\n}\n\n//Login users\n\nexport const login = ({email, password}) => async dispatch => {\n    try{\n        const config = {\n            headers:{'Content-Type': 'application/json'}\n        }\n        const body = JSON.stringify({email, password})\n        \n        const res = await axios.post('/api/user/login', body, config)\n        const errors = res.data.errors;\n            if(!errors){\n                dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: res.data\n                })\n                dispatch(loadUser());\n            }else{\n                Array.isArray(errors) ? res.data.errors.forEach(error => dispatch(formAlert(error.msg))): dispatch(formAlert(errors))\n            }\n\n    }catch(err){\n        console.log(err);\n    }\n\n}\n\n//Logout action\n\nexport const logout = () => async dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n}\n\n// Delete user profile\n\nexport const deleteUser = userId => async dispatch => {\n    console.log(\"action call received\", userId);\n    \n    try{\n        if(userId){\n            const res = await axios.delete(`/api/user/delete/${userId}`);\n            if(res.data.msg === 'User deleted'){\n                dispatch({\n                    type: USER_DELETED,\n                    payload: res.data.user\n                })\n            }\n        }\n    }catch(err){\n        console.error(err);\n    }\n}\n\n\n//Edit User Profile \nexport const editUser = (userId, formData) => async dispatch => {\n    try{\n        const res = await axios.put(`/api/user/update/${userId}`, formData);\n        if(res.data.msg === 'User updated'){\n            dispatch({\n                type: USER_UPDATED,\n                payload: res.data\n            })\n        }\n    }catch(err){\n        console.error(err);\n    }\n}\n\n//Profile file upload\nexport const fileUpload = file => async dispatch => {\n    const profilePicture = new FormData();\n    if(file){profilePicture.append('file', file)};\n    try{\n        const res = await axios.post('/upload',profilePicture, {\n            headers:{\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        if(res.data.fileName){\n            dispatch({\n                type:FILE_UPLOADED,\n                payload: res.data\n            })\n        }\n    }catch(err){\n        console.log(err);\n    }\n}","import React, {Fragment, useEffect} from 'react'\nimport EventsCarousel from './Events/EventsCarousel';\nimport BlogsArea from './Posts/BlogsArea';\nimport TwitterFeed from './TwitterFeed';\nimport {loadUser} from '../actions/user';\nimport {getPosts, unloadCurrentPost} from '../actions/posts';\nimport {connect} from 'react-redux';\n\n\nconst Layout = ({loadUser, isAuthenticated, getPosts, unloadCurrentPost}) => {\n\n    useEffect(() => {\n        unloadCurrentPost();\n        getPosts();\n        if(isAuthenticated) loadUser();\n    },[isAuthenticated,loadUser, unloadCurrentPost, getPosts])\n\n    return (\n        <Fragment>\n            <EventsCarousel />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-9 p-sm-2 p-md-5\">\n                        <BlogsArea />\n                    </div>\n                    <div className=\"col-md-3 border-left p-3 d-none d-md-block\">\n                        <h6 className=\"mb-3\">Latest from Twitter:</h6>\n                        <TwitterFeed />\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.user.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {loadUser, getPosts, unloadCurrentPost})(Layout)\n","import {\n    GET_CURRENT_WEATHER,\n    GET_CITY\n} from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state=initialState, action){\n    const {type, payload} = action\n    switch(type){\n        case GET_CURRENT_WEATHER : return {\n            ...state,\n            weather: payload\n        }\n        case GET_CITY :\n            return {\n                ...state,\n                location: payload\n            }\n        default: return state;\n    }\n}","import {\n    FORM_ALERT\n} from '../actions/types'\n\nconst initialState = [];\n\nexport default function (state=initialState, action){\n    const {type, payload} = action;\n\n    switch(type){\n        case FORM_ALERT: \n            return [...state, payload]\n        default: return state;\n    }\n}\n","import {\n    USER_REGISTERED,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGOUT,\n    LOGIN_SUCCESS,\n    USER_DELETED,\n    USER_UPDATED,\n    FILE_UPLOADED\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading:true,\n    userInfo: null,\n    fileUploaded: false,\n    uploadedFile:{\n        filePath: '',\n        fileName:''\n    }\n};\n\nexport default function(state=initialState, action){\n    const {type, payload} = action;\n\n    switch(type){\n        case LOGIN_SUCCESS:\n        case USER_REGISTERED : \n            localStorage.setItem('token', payload.token)\n            return{\n                ...state,\n                ...payload,\n                isAuthenticated: true\n            }\n        case USER_UPDATED:\n        case USER_LOADED:\n            return ({\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                userInfo: payload.user\n            })\n        \n        case AUTH_ERROR: \n                return({\n                    ...state,\n                    token: null,\n                    isAuthenticated: false\n                })\n        case USER_DELETED:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                loading: true,\n                isAuthenticated: false,\n                userInfo: null\n            }\n        \n        case FILE_UPLOADED:\n            return{\n                ...state,\n                fileUploaded: true,\n                uploadedFile: payload\n            }\n\n        default: return state\n\n    }\n\n}","import {\n    GET_TWITTER_FEED\n} from '../actions/types';\n\nconst initialState = {\n    tweets: [],\n    loading: true\n};\n\nexport default function(state=initialState, action){\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_TWITTER_FEED : \n            return{\n                ...state,\n                tweets: payload,\n                loading: false\n            }\n        default: return state\n    }\n}","import {\n    GET_POSTS,\n    GET_POST,\n    REMOVE_CURRENT_POST,\n    POST_ADDED,\n    POST_LIKED,\n    POST_UNLIKED,\n    COMMENT_ADDED,\n    COMMENT_DELETED,\n    COVER_IMG_UPLOADED\n} from '../actions/types';\n\nconst initialState = {\n    loading: true,\n    coverImgUploaded: false,\n    coverImgDetails:{\n        filePath:'',\n        fileName:''\n    }\n}\n\nexport default function(state=initialState, action){\n    const {type, payload} = action;\n    \n    switch(type){\n        case GET_POSTS : \n            return{\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        \n        case GET_POST: \n            return{\n                ...state,\n                onePost: payload\n            }\n        \n        case POST_ADDED: \n            return{\n                ...state,\n                posts: [payload, ...state.posts]\n            }\n        \n        case REMOVE_CURRENT_POST:\n            return{\n                ...state,\n                onePost: null\n            }\n        \n        case POST_LIKED:\n        case POST_UNLIKED:\n        case COMMENT_ADDED:\n        case COMMENT_DELETED:\n            return{\n                ...state, \n                onePost: payload\n            }\n        \n        case COVER_IMG_UPLOADED:\n            return{\n                ...state,\n                coverImgUploaded: true,\n                coverImgDetails: payload\n            }\n\n        default: return state\n    }\n}","import {\n    GET_EVENTS\n} from '../actions/types';\n\nconst initialState = {\n    events: [],\n    loading: true\n};\n\nexport default function(state=initialState, action){\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_EVENTS : \n            return{\n                ...state,\n                events: payload,\n                loading: false\n            }\n        default: return state\n    }\n}","import {combineReducers} from 'redux';\nimport weather from './weather';\nimport alerts from './formAlert';\nimport user from './users';\nimport tweets from './tweets';\nimport posts from './posts';\nimport events from './events';\n\nexport default combineReducers({\n    weather,\n    alerts,\n    user,\n    tweets,\n    posts,\n    events\n})","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React from 'react'\n\n\nconst Alert = alert => {\n    return (\n        <div className=\"alert alert-danger alert-dismissible\">\n            <button className=\"close\" type=\"button\" data-dismiss=\"alert\">\n                <span>&times;</span>\n            </button>\n            {alert.alert.text}\n        </div>\n    )\n}\n\nexport default Alert;\n","import React, {Fragment, useState} from 'react'\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport {formAlert, registerUser, fileUpload} from '../../actions/user';\nimport Alert from './Alert';\n\nconst Signup = ({formAlert, registerUser, alerts, isAuthenticated, fileUpload, filePath}) => {\n\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName:'',\n        email:'',\n        password:'',\n        password2:'',\n        bio:'',\n        interests:'',\n        picture:filePath,\n        location:'',\n        submitBtn:false\n    })\n\n    const [file, setFile] = useState('');\n    const [fileName, setFileName] = useState('Choose File : limit 3mb')\n\n    \n    const {password, password2} = formData;\n\n    const onChange = e =>{\n        // console.log(formData);\n        setFormData({...formData, [e.target.name]:e.target.value});\n    }\n\n    const onFileChange = e => {\n        setFile(e.target.files[0]);\n        setFileName(e.target.files[0].name);\n    }\n    \n    // console.log(\"file\", file);\n   \n    const uploadPicture = e => {\n       fileUpload(file);\n    }\n   \n    \n    const formSubmit = e => {\n        e.preventDefault();\n        if(password !== password2) {\n            formAlert(\"Passwords didn't match\"); \n            window.scrollTo(10,30);\n            return null;\n        }\n        if(file){\n            if(file.size > 3000000){\n                formAlert('File is too big, please upload images less than 3 MB.');\n                window.scrollTo(10,30);\n                return null;\n            }\n            // registerUser(formData);\n        }\n        // setFormData({...formData, picture: filePath})\n        // console.log(formData);\n        registerUser(formData, filePath);\n\n    }\n\n\n    \n    if(isAuthenticated){\n       return <Redirect to=\"/\" />\n    }\n\n    const onRulesAgree = e => {\n        e.target.checked ? setFormData({...formData, submitBtn:true}) \n        : setFormData({...formData, submitBtn:false})\n    }\n\n    return (\n        <Fragment>\n        {/* <Navbar /> */}\n        <div className=\"container\">\n            <div className=\"row\"> \n                <div className=\"col-md-8 p-2\">\n                    <div className=\"card p-4\">\n                        <div className=\"card-body\">\n                            <h3 className=\"text-center\">Please fill out the form</h3>\n                            <hr/>\n                            {alerts.map(alert => (<Alert key={alert.id} alert={alert}/>))}\n                            {/* Form Begins */}\n                            <form onSubmit={e=> formSubmit(e)}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <input onChange={e=> onChange(e)} type=\"text\" className=\"form-control mt-3\" placeholder=\"First Name*\" name=\"firstName\" required />\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <input onChange={e=> onChange(e)} type=\"text\" className=\"form-control mt-3\" placeholder=\"Last Name\" name=\"lastName\"  />\n                                    </div>\n                                </div>\n                                <input onChange={e=> onChange(e)}  type=\"email\" className=\"form-control mt-3\" placeholder=\"Email address*\" name=\"email\" required />\n                                <input onChange={e=> onChange(e)}  type=\"password\" className=\"form-control mt-3\" placeholder=\"Password*\" name=\"password\" minLength=\"6\" maxLength=\"20\" required/>\n                                    <small className=\"form-text text-muted ml-1 mt-0\">must be at least 6 characters</small>\n                                <input onChange={e=> onChange(e)}  type=\"password\" className=\"form-control mt-3\" placeholder=\"Confirm Password*\" name=\"password2\" minLength=\"6\" maxLength=\"20\" required/>\n                                <textarea onChange={e=> onChange(e)}  className=\"form-control mt-3\" placeholder=\"Tell us a few lines about you!\" name=\"bio\"></textarea>\n                                <input onChange={e=> onChange(e)}  type=\"text\" className=\"form-control mt-3\" placeholder=\"Your interests\" name=\"interests\" />\n                                    <small className=\"form-text text-muted ml-1 mt-0\">separate by comma</small>\n                                    {/* File Upload input starts */}\n                                <div className=\"d-flex custom-file mt-3 align-center\">\n                                    <div className=\"col-md-9\">\n                                        <input onChange={e=> onFileChange(e)} name=\"picture\" type=\"file\" className=\"custom-file-input\"  accept=\"image/png, image/jpeg\"/>\n                                        <label htmlFor=\"image\" className=\"custom-file-label\">{fileName}</label>\n                                        {/* <small className=\"form-text text-muted ml-1 mt-0 mb-5\">max size 3MB</small> */}\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <button type=\"button\" onClick={uploadPicture} className=\"d-inline btn btn-dark\">Upload</button>\n                                    </div>\n                                </div>\n                                {/* Picture display */}\n                                {filePath? \n                                    <img src={filePath} alt=\"profile_img\"  width=\"100px\" className=\"img-fluid rounded\"/>\n                                    : <div></div>}\n                                <input onChange={e=> onChange(e)} type=\"text\" className=\"form-control mt-3\" placeholder=\"Location\" name=\"location\"/>\n                                \n                                <label htmlFor=\"accept\" className=\"mt-3 ml-4\">\n                                    <input type=\"checkbox\" \n                                        className=\"form-check-input\"\n                                        onChange={e => onRulesAgree(e)}/> I agree to the community rules\n                                </label>\n                                <button className='btn btn-outline-dark btn-block mt-3' disabled={!formData.submitBtn}>Submit</button>\n                            </form>\n                            <div className=\"text-center mt-3\">\n                            Already have an account? <Link to=\"/login\" > Sign-in </Link>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"col-md-4 p-2\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h5>Community Rules</h5>\n                        </div>\n                        <div className=\"card-body\">\n                            <ol>\n                                <li>Please good to one another</li>\n                                <li>Follow Rule#1 - seriously</li>\n                                <li>Leave politics to the politics category, don't bombard comments section</li>\n                                <li>Don't sell \"your\" products to the community</li>\n                                <li>The blog post shouldn't contain just link(s)</li>\n                                <li>These rules subjected to change at our descretion to promote the health of the community</li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </div>\n     \n        </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alerts,\n    isAuthenticated: state.user.isAuthenticated,\n    filePath: state.user.uploadedFile.filePath\n})\n\nexport default connect(mapStateToProps, {formAlert, registerUser, fileUpload})(Signup);\n","import React, {Fragment, useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {login} from '../../actions/user';\nimport Alert from './Alert';\n\nconst Login = ({isAuthenticated, alerts, login}) => {\n\n    const [formData, setFormData] = useState({\n        email:'',\n        password:''\n    });\n\n    \n    const onChange = e => setFormData({...formData, [e.target.name]:e.target.value});\n\n    const formSubmit = e => {\n        e.preventDefault();\n        login(formData);\n    }\n\n    if(isAuthenticated){\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <Fragment>\n            {/* <Navbar /> */}\n            <div className=\"container mt-2\">\n                <div className=\"d-flex justify-content-center \">\n                    <div className=\"w-auto p-5 mt-5\">\n                        <h4 className=\"text-center m-3\">Sign in</h4>\n                        {alerts.map(alert => (<Alert key={alert.id} alert={alert}/>))}\n                        <form onSubmit = {e=> formSubmit(e)}>\n                            <input type=\"email\" className=\"form-control mt-3\" name=\"email\" onChange={e=> onChange(e)} placeholder=\"Email\"/>\n                            <input type=\"password\" className=\"form-control mt-3\" name=\"password\" onChange={e=> onChange(e)} placeholder=\"Password\"/>\n                            <button className=\"btn btn-dark btn-block mt-3\">Login</button>\n                        </form>\n                        <div className=\"mt-4\">Don't have an account? <Link to=\"/signup\">Register</Link></div>\n                    </div>\n                </div>\n\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.user.isAuthenticated,\n    alerts: state.alerts\n})\n\nexport default connect(mapStateToProps, {login})(Login)\n","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {deleteUser} from '../../actions/user';\nimport Spinner from '../../components/Spinner';\n\n\nconst Profile = ({user, deleteUser}) => {\n\n    const deleteCurrentUser = () => {\n        if (window.confirm(`Are you sure you wish to delete the Account? This can't be undone.`)) {\n            deleteUser(user.userInfo._id);\n        }\n    }\n\n\n    return(\n        <Fragment>\n            <div className=\"container mt-4\">\n                {user.isAuthenticated? (<div>\n                <div className=\"ml-auto mb-4 text-right\">\n                    <Link to='/me/edit' className=\"btn btn-outline-dark btn-sm mr-2\"> <i className=\"fas fa-pencil-alt\"></i> Edit Account</Link>\n                    <button onClick={()=> deleteCurrentUser()} className=\"btn btn-danger btn-sm\"> <i className=\"fas fa-trash-alt\"></i> Delete Account</button>\n                </div>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <h4 className=\"display-4\">{`${user.userInfo.firstName} ${user.userInfo.lastName}`}</h4>\n                        <p className=\"lead\">{user.userInfo.location}</p>\n                        <p><span className=\"h6\">Email: </span>{user.userInfo.email}</p>\n                    </div>\n                    <div>\n                        <img src={user.userInfo.profileImage} alt=\"profile_img\"  width=\"150px\" className=\"img-fluid rounded\"/>\n                        {/* <button className=\"btn btn-outline-dark btn-block btn-sm mt-3\">Change</button> */}\n                    </div>\n                </div>\n                <hr/>\n                <p className=\"lead\"><span className=\"h5\"></span>{user.userInfo.bio}</p>\n                <div className=\"mb-3\"><span className=\"h5 mb-3\">Interests: </span><br />\n                {user.userInfo.interests.map(interest => (\n                    <p key={interest} className=\"text-secondary ml-2 mt-1\" style={{'fontSize':'0.8rem'}}><i className=\"far fa-check-circle mr-2\"></i>{' '}{interest.toUpperCase()}</p>\n                ))}</div>\n\n                </div>) : (<Spinner /> )}\n\n            </div>\n        </Fragment>\n        \n    )\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    loading: state.loading\n})\n\nexport default connect(mapStateToProps, {deleteUser})(Profile);\n","import React from 'react'\n\n\nconst Weather = ({weather, location}) => {\n    \n\n\n    let icon = weather? weather.icon : 'loading';\n    switch(icon){\n        case 'clear-day': {icon='fas fa-sun'; break;}\n        case 'clear-night': {icon='far fa-sun'; break;}\n        case 'rain': {icon = 'fas fa-cloud-showers-heavy'; break;}\n        case 'snow': {icon = 'fas fa-snowflake'; break;}\n        case 'sleet': {icon = 'fas fa-cloud-meatball'; break;}\n        case 'wind': {icon='fas fa-wind'; break;}\n        case 'fog': {icon='fas fa-smog'; break;}\n        case 'cloudy': {icon='fas fa-cloud'; break;}\n        case 'partly-cloudy-day': {icon='fas fa-cloud-sun'; break;}\n        case 'partly-cloudy-night': {icon='fas fa-cloud-moon'; break;}\n        case 'hail' : {icon='fas fa-cloud-meatball'; break;}\n        case 'thunderstorm': {icon='fas fa-bolt'; break;}\n        default: {icon='fas fa-cloud-sun'; break;}\n    }\n    \n    const loc_text = location ? (<span> <small>{location.city}, {location.state}</small></span>):(<span></span>)\n\n    return (\n        weather? (<div>\n            <i className={icon}></i>\n            <p className=\"d-inline\"> {Math.ceil(weather.temperature?weather.temperature:0)}<sup>o</sup>F </p>\n            {loc_text}\n        </div>) : (<div></div>)\n    \n    )\n}\n\nexport default Weather\n","//Libraries\nimport React, {useEffect, Fragment} from 'react'\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n//Assets\nimport logo from '../assets/atx-voice-full-logo.png';\n//Local components\nimport Weather from './Weather';\nimport {getCurrentWeather, getCity} from '../actions/weather';\nimport {logout, loadUser} from '../actions/user';\n\n\n\nconst Navbar = ({weather, location, getCurrentWeather, getCity, isAuthenticated, logout, loadUser, loading, userInfo}) => {\n\n    useEffect(()=>{\n            let latitude = '30.26715';\n            let longitude = '-97.74306';\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    latitude = position.coords.latitude;\n                    longitude = position.coords.longitude;\n                },\n                err => console.log(err)\n            );\n            getCurrentWeather(latitude, longitude);\n            getCity(latitude, longitude);\n            if(localStorage.getItem('token')) loadUser();\n    },[getCurrentWeather, getCity, loadUser])\n\n    // console.log(isAuthenticated);\n\n\n    const guestLinks = (\n        <ul className=\"navbar-nav ml-auto\">\n            <li><Link to=\"/login\" className=\"nav-link text-dark text-center\">Sign in</Link></li>\n            <li> <Link to=\"/signup\" className=\"nav-link btn btn-outline-dark ml-3\">Get Started</Link></li>\n        </ul>\n    )\n    \n    const imgCropper = {\n        \"width\": \"35px\",\n        \"height\": \"35px\",\n        \"position\": \"relative\",\n        \"overflow\": \"hidden\",\n        \"borderRadius\": \"50%\"\n    }\n\n    const profilePic = {\n        \"display\": \"inline\",\n        \"margin\": \"0 auto\",\n        \"marginLeft\": \"-25%\", //centers the image\n        \"height\": \"100%\",\n        \"width\": \"auto\"\n    }\n\n\n    const authLinks = (\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item mr-3 align-items-center\">\n            <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"text-right\">\n                    {/* { (!loading) ? <div style={imgCropper}> <img src={userInfo.profileImage} width=\"30px\" alt=\"\" className=\"img-fluid border rounded-circle\"/> </div> : <i className=\"fas fa-user\" />} */}\n                    { (!loading) ? <div style={imgCropper}> <img src={userInfo.profileImage} style={profilePic} width=\"30px\" alt=\"\" className=\"border\"/> </div> : <i className=\"fas fa-user\" />}\n                </div>\n                <div>\n                    <Link to=\"/me\" className=\"d-md-inline d-sm-block nav-link text-dark\">{ !loading ? userInfo.firstName : ''}</Link>\n                    <Link to=\"/\" onClick={logout} className=\"d-md-inline d-sm-block nav-link text-dark ml-2\">{ !loading ? 'Logout' : ''}</Link>\n                    {/* <a href=\"#\" onClick={logout} className=\"dropdown-item\"><i className=\"fas fa-cog\"></i> Logout</a> */}\n                </div>\n            </div>\n        </li>\n    </ul>\n    );\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-sm mr-auto\">\n                <div className=\"container border-bottom pb-1\">\n                    <div className=\"d-flex align-items-center\">\n                        <div>\n                            <Link to=\"/\" className=\"navbar-brand\"><img src={logo} alt=\"\" className=\"img-fluid\" style={{height:'20px', width:'auto'}}/></Link>\n                        </div>\n                        <div className=\"pt-1\">\n                            <Weather weather={weather.weather} location={location}/>\n                        </div>\n                    </div>\n\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n                                <i className=\"fas fa-bars\"></i>\n                    </button>\n                   \n                    <div id=\"navbarNav\" className=\"collapse navbar-collapse\">\n                        <Fragment>\n                            {isAuthenticated && !loading ? authLinks: guestLinks}\n                        </Fragment>\n                    </div>\n\n                </div>\n            </nav>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    weather:state.weather,\n    location: state.weather.location,\n    isAuthenticated: state.user.isAuthenticated,\n    userInfo: state.user.userInfo,\n    loading: state.user.loading\n})\n\nexport default connect(mapStateToProps, {getCurrentWeather, getCity, logout, loadUser})(Navbar);\n","import {\n    GET_CURRENT_WEATHER,\n    GET_CITY\n} from './types';\nimport axios from 'axios';\nimport config from '../config/config'\n// import setAuthToken from '../utils/setAuthToken';\n\nexport const getCurrentWeather = (lat, long) => async dispatch => {\n    try{\n        const body = {lat, long}\n        const res = await axios.get('/api/weather', body);\n        dispatch({\n            type:GET_CURRENT_WEATHER,\n            payload: res.data\n        })\n        \n    }catch(err){\n        console.log(\"Error getting weather data:\", err)\n    }\n}\n\nexport const getCity = (lat, long) => async dispatch => {\n    try{\n        const body = {lat, long}\n        // const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${config.google_geocode_key}`)\n        const res = await axios.get('/api/weather/city', body);\n        const city = res.data.city;\n        const state= res.data.state;\n        // console.log(res);\n        dispatch({\n            type: GET_CITY,\n            payload: {\n                city,\n                state\n            }\n        })\n    }catch(err){\n        console.log(err);\n    }\n\n}","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {getPost, deletePost, likePost, addComment, deleteComment} from '../../actions/posts';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment'\nimport 'react-quill/dist/quill.snow.css';\n\nconst Post = ({match, getPost, posts, userInfo, deletePost, likePost, addComment, deleteComment, isAuthenticated}) => {\n    useEffect(()=>{\n        getPost(match.params.id);\n    },[getPost, match.params.id])\n\n    const [comment, setComment] = useState('');\n\n\n    const deleteCurrentPost = () => {\n        if (window.confirm('Are you sure you wish to delete this item?')) {\n            deletePost(match.params.id);\n        }\n    }\n\n    const likeThisPost = () => {\n        likePost(match.params.id);\n    }\n\n\n  \n    const commentSubmit = e => {\n        e.preventDefault();\n        if(isAuthenticated){\n            addComment(match.params.id, comment)\n        }\n        setComment('');\n    }\n\n    const deleteThisComment = comment_id => {\n        deleteComment(match.params.id, comment_id)\n    }\n\n      \n    const imgCropper = {\n        \"width\": \"35px\",\n        \"height\": \"35px\",\n        \"position\": \"relative\",\n        \"overflow\": \"hidden\",\n        \"borderRadius\": \"50%\"\n    }\n\n    const profilePic = {\n        \"display\": \"inline\",\n        // \"margin\": \"0 auto\",\n        // \"marginLeft\": \"-25%\", //centers the image\n        \"marginLeft\": \"0.5rem\",\n        \"height\": \"40px\",\n        \"width\": \"40px\",\n        \"objectFit\":\"cover\",\n        \"borderRadius\":\"50%\"\n    }\n\n    return (\n        <div className=\"container mt-3\">\n            {posts.onePost? \n            <div className=\"mx-md-5 mx-sm-2\">\n                <Link to=\"/\" className=\"mb-3\">Back to posts</Link>\n            <h2 className=\"mb-4 text-dark text-center display-4\"> {posts.onePost.title} </h2>\n                <div className=\"mt-3 d-flex align-items-center justify-content-between\">\n                    <div className=\"d-flex\">\n                        <div className=\"mr-2\">\n                                <img src={posts.onePost.user.profileImage} width=\"50px\" alt=\"\" className=\"img-fluid border border-dark rounded-circle\"/>\n                        </div>\n                        <div className=\"text-left\">\n                            {`${posts.onePost.user.firstName} ${posts.onePost.user.lastName} `} \n                            <br/>\n                            <p className=\"text-dark\"> <small><Moment format=\"MMM DD, YY\" >{posts.onePost.createdDate}</Moment> </small> </p>\n                        </div>\n                    </div>\n                    {(isAuthenticated && posts.onePost.user._id === userInfo._id) ? (\n                    <div> \n                        <Link to={`/post/edit/${match.params.id}`} className=\"mr-2 btn btn-outline-dark btn-sm\"> <i className=\"fas fa-pencil-alt\"></i> Edit</Link>\n                        <Link to=\"/\" onClick ={deleteCurrentPost} className=\"btn btn-outline-danger btn-sm\"><i className=\"fas fa-trash-alt\"></i>{' '}Delete</Link> \n                    </div>\n                        ) : (<div> </div>)}\n             \n                </div>\n\n                <img src={posts.onePost.cover_img} className=\"img-fluid rounded mx-auto mt-4 mb-5 d-block w-100\" style={{'objectFit': 'cover', 'maxHeight':'400px', 'objectPosition': '0 0'}}alt=\"Cover\"></img>\n                <div className=\"mx-md-4\" dangerouslySetInnerHTML={{ __html: posts.onePost.content }} />\n                <hr/>\n                {/* Like Post functionality  */}\n                <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                        <strong>Likes : {posts.onePost.likes.length}</strong>\n                        <div className=\"mt-2\">\n                            {posts.onePost.likes.map(like => (\n                                <img key={like.user} src={like.profile_img} width=\"20px\" alt={like.email} className=\"border\" style={profilePic}/> \n                            ))}\n                        </div>\n                    </div>\n                    <div>\n                        {isAuthenticated && posts.onePost.likes.filter(like => (like.user === userInfo._id)).length>0 ? (\n                            <div>\n                                <button onClick={likeThisPost} className=\"btn btn-outline-danger btn-sm\">Unlike</button>\n                            </div>\n                        ) : ( \n                        <button onClick={likeThisPost} className=\"btn btn-outline-dark btn-sm\" disabled={!isAuthenticated}>Like this post</button>\n                        \n                        ) }\n                        {/* {isAuthenticated ? <div></div>: <p className=\"text-center\"><small>Please login to like this post</small></p>} */}\n                    </div>\n                </div>\n                <hr/>\n                {/* Comments functionality */}\n                <form onSubmit={e => commentSubmit(e)} className=\"form mb-4\">\n                    <div className=\"form-group\">\n                        <i className=\"far fa-comment-dots\"></i> <label htmlFor=\"comment\">Add comment</label>\n                        <textarea \n                            className=\"form-control\" \n                            name=\"comment\" \n                            value={comment}\n                            onChange = {e => setComment(e.target.value)}\n                            placeholder={isAuthenticated ? \"Please enter comment\" : \"Please login to add comment\"}\n                            rows=\"2\"></textarea>\n                    </div>\n                    <button className=\"btn btn-outline-dark btn-sm\" disabled={!isAuthenticated} >Add Comment</button>\n                </form>\n                \n                {/* Display comments */}\n                <div className=\"mt-3\">\n                {posts.onePost.comments.map(comment => (\n                    <div key={comment.id} className=\"card my-3\">\n                        <div className=\"card-header d-flex align-items-center bg-white border-bottom-0\">\n                                <img src={comment.profile_img} width=\"30px\" alt={comment.email} className=\"border\" style={profilePic}/>\n                            <div className=\"ml-3\">\n                                <span><small className=\"text-muted\">{comment.name} <br/>\n                                <Moment parse=\"x\" format=\"MMM DD, h:MM A\"> {comment.created_date} </Moment>\n                                </small></span>\n                            </div>\n                            {isAuthenticated && comment.user === userInfo._id ? (  \n                                <div className=\"ml-auto\">\n                                    {/* <button className=\"mr-2 btn btn-outline-dark btn-sm border-0\"> <i className=\"fas fa-pencil-alt\"></i></button> */}\n                                    <button onClick={() => deleteThisComment(comment.id)} className=\"btn btn-outline-danger btn-sm border-0\"><i className=\"fas fa-trash-alt\"></i>{' '}</button> \n                                </div>\n                                ) : (<div> </div>)}\n                          \n                        </div>\n                        <div className=\"card-body ml-5\">\n                            {comment.comment}\n                        </div>\n                    </div>\n\n\n                ))}\n\n                </div>               \n\n            </div> \n            : <div> Loading... </div>}\n\n    \n\n        </div>\n    )\n\n  \n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    userInfo: state.user.userInfo,\n    isAuthenticated: state.user.isAuthenticated\n    \n})\n\nexport default connect(mapStateToProps, {getPost, deletePost, likePost, addComment, deleteComment})(Post);\n","import React, {useState, useEffect} from 'react';\nimport ReactQuill from 'react-quill';\nimport {connect} from 'react-redux';\nimport {addPost, coverImgUpload} from '../../actions/posts';\nimport {loadUser} from '../../actions/user';\nimport 'react-quill/dist/quill.snow.css';\nimport {Link} from 'react-router-dom';\n\nconst CreatePost = ({addPost, loadUser, coverImgUpload, filePath}) => {\n\n    useEffect(()=>{\n        loadUser();\n    },[loadUser]);\n\n    const [formData, setFormData] = useState({\n        title:'',\n        cover_img: '',\n        content:''\n    });\n\n    const [file, setFile] = useState(null);\n    const [fileName, setFileName] = useState('');\n\n    const contentUpdate = e => {\n        setFormData({...formData, content: e})\n    }\n\n    const formSubmit = e => {\n        e.preventDefault();\n        // console.log(\"form data\", formData);\n        // console.log(\"file path\", filePath);\n        addPost(formData, filePath);\n    }\n\n    const onFileChange = e => {\n        setFile(e.target.files[0]);\n        setFileName(e.target.files[0].name);\n    }\n\n    const uploadPicture = e => {\n        coverImgUpload(file);\n    }\n\n\n    const modules = {\n        toolbar: [\n            ['bold','italic','underline','strike','blockquote'],\n            [{'list':'ordered'}, {'list':'bullet'}],\n            ['code-block','link','image','video'],\n            ['clean']\n        ]\n    }\n    const formats=[\n        'bold','italic','underline','strike','blockquote',\n        'list','bullet','link','image','video','code-block'\n    ]\n\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"text-center h4\">Create a New Post</div>\n            <form onSubmit={e=> formSubmit(e)} className=\"mx-3\">\n                <input \n                    type=\"text\" \n                    name=\"title\" \n                    placeholder=\"Title of the post\"\n                    className=\"form-control mt-3\" \n                    value={formData.title} \n                    onChange={e => setFormData({...formData, title:e.target.value})}\n                />\n                {/* <input \n                    type=\"text\" \n                    name=\"cover_img\" \n                    placeholder=\"Cover image...\"\n                    className=\"form-control mt-3\"\n                    value={formData.cover_img}\n                    onChange={e => setFormData({...formData, cover_img:e.target.value})}\n                    /> */}\n                \n                <div className=\"d-flex custom-file mt-3 align-center\">\n                    <div className=\"col-md-9\">\n                        <input onChange={e=> onFileChange(e)} name=\"picture\" type=\"file\" className=\"custom-file-input\"  accept=\"image/png, image/jpeg\"/>\n                        <label htmlFor=\"image\" className=\"custom-file-label\">{fileName}</label>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <button type=\"button\" onClick={uploadPicture} className=\"d-inline btn btn-dark\">Upload</button>\n                    </div>\n                </div>\n                <ReactQuill \n                    onChange={e => contentUpdate(e)}\n                    className=\"mt-4\"\n                    style={{'height':'300px'}}\n                    // value={formData.content}\n                    modules={modules}\n                    formats={formats}\n                    placeholder=\"write your text here...\"\n                />\n                {/* <Link to=\"/\">  */}\n                <button type=\"Submit\" className=\"btn btn-outline-dark btn-block btn-sm mt-5\">Submit</button> \n                {/* </Link> */}\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    // fileName: state.coverImgDetails.fileName,\n    filePath: state.posts.coverImgDetails.filePath\n})\n\nexport default connect(mapStateToProps, {addPost, loadUser, coverImgUpload})(CreatePost);\n","import React, {useState, useEffect}  from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport {editPost} from '../../actions/posts';\n\n\nconst EditPost = ({match, onePost, editPost}) => {\n    const [formData, setFormData] = useState({\n        title:'',\n        cover_img: '',\n        content:''\n    });\n\n   useEffect(()=>{\n        setFormData({\n            title: onePost? onePost.title : '',\n            cover_img: onePost? onePost.cover_img :'',\n            content: onePost? onePost.content: ''\n        })\n   },[setFormData, onePost])\n\n\n    const contentUpdate = e => {\n        setFormData({...formData, content: e})\n    }\n\n    const formSubmit = e => {\n        e.preventDefault();\n        // console.log(formData);\n        editPost(match.params.id, formData);\n    }\n\n    const modules = {\n        toolbar: [\n            ['bold','italic','underline','strike','blockquote'],\n            [{'list':'ordered'}, {'list':'bullet'}],\n            ['code-block','link','image','video'],\n            ['clean']\n        ]\n    }\n    const formats=[\n        'bold','italic','underline','strike','blockquote',\n        'list','bullet','link','image','video','code-block'\n    ]\n\n    return (\n        <div className=\"container mt-3\">\n            <Link to={`/post/${match.params.id}`} className=\"mb-3\">Back</Link> <br/>\n            <div className=\"text-center h4\">Edit Post</div>\n            <form onSubmit={e=> formSubmit(e)} className=\"mx-3\">\n                <input \n                    type=\"text\" \n                    name=\"title\" \n                    placeholder=\"Title of the post\"\n                    className=\"form-control mt-3\" \n                    value={formData.title} \n                    onChange={e => setFormData({...formData, title:e.target.value})}\n                />\n                <input \n                    type=\"text\" \n                    name=\"cover_img\" \n                    placeholder=\"Cover image...\"\n                    className=\"form-control mt-3\"\n                    value={formData.cover_img}\n                    onChange={e => setFormData({...formData, cover_img:e.target.value})}\n                    />\n                <div className=\"mb-3\">\n                    <ReactQuill \n                        onChange={e => contentUpdate(e)}\n                        className=\"mt-4\"\n                        style={{'height':'300px'}}\n                        defaultValue={onePost? onePost.content : ''}\n                        modules={modules}\n                        formats={formats}\n                        placeholder=\"write your text here...\"\n                        />\n                </div>\n                {/* <Link to=\"/\">  */}\n                <button className=\"btn btn-outline-dark btn-block btn-sm mt-5\">Submit</button> \n                {/* </Link> */}\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    onePost: state.posts.onePost\n})\n\nexport default connect(mapStateToProps, {editPost})(EditPost);\n","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {editUser} from '../../actions/user';\nimport {Redirect} from 'react-router-dom';\n\nconst EditProfile = ({userInfo, isAuthenticated, editUser}) => {\n\n    const [formData, setFormData] = useState({\n        firstName:'',\n        lastName:'',\n        bio:'',\n        interests:'',\n        picture:'',\n        location:''\n    })\n\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    useEffect(()=>{\n        setFormData({\n            firstName: userInfo? userInfo.firstName : '',\n            lastName: userInfo? userInfo.lastName : '',\n            bio: userInfo? userInfo.bio : '',\n            interests: userInfo? userInfo.interests.join(',') : '',\n            picture: userInfo? userInfo.profileImage : '',\n            location: userInfo? userInfo.location : ''\n        })\n    },[setFormData, userInfo])\n\n    const editCurrentUser = e => {\n        e.preventDefault();\n        editUser(userInfo._id, formData);\n        setFormSubmitted(true);\n    }\n\n    if(formSubmitted) {\n        return (<Redirect to='/me' />);\n    }\n\n\n\n    \n    return (\n        <div className=\"container mt-5\">\n            <div className=\"text-center h5\">Edit User Profile</div>\n            <form onSubmit ={ e => editCurrentUser(e)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <input type=\"text\" className=\"form-control mt-3\" value={formData.firstName} placeholder=\"First Name*\"\n                        onChange={e=> setFormData({...formData, firstName:e.target.value}) }name=\"firstName\"  required />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <input type=\"text\" value={formData.lastName} onChange={e=> setFormData({...formData, lastName:e.target.value}) } className=\"form-control mt-3\" placeholder=\"Last Name\" name=\"lastName\"  />\n                    </div>\n                </div>\n                <textarea value={formData.bio} onChange={e=> setFormData({...formData, bio:e.target.value}) } className=\"form-control mt-3\" placeholder=\"Tell us a few lines about you!\" name=\"bio\"></textarea>\n                <input value={formData.interests} onChange={e=> setFormData({...formData, interests:e.target.value}) } type=\"text\" className=\"form-control mt-3\" placeholder=\"Your interests\" name=\"interests\" />\n                <small className=\"form-text text-muted ml-1 mt-0\">separate by comma</small>\n                <div className=\"custom-file mt-3\">\n                    <input onChange={e=> setFormData({...formData, picture:e.target.value}) }type=\"file\" className=\"custom-file-input\" name=\"picture\"/>\n                    <label htmlFor=\"image\" className=\"custom-file-label\">{formData.picture}</label>\n                </div>\n                <small className=\"form-text text-muted ml-1 mt-0\">max size 3MB</small>\n                {isAuthenticated ? ( <div> <img src={userInfo.profileImage} alt=\"profile_img\"  width=\"100px\" className=\"img-fluid rounded\"/> </div> ) : (<div></div>)}\n                <input value={formData.location} onChange={e=> setFormData({...formData, location:e.target.value}) } type=\"text\" className=\"form-control mt-3\" placeholder=\"Location\" name=\"location\"/>\n\n                <button className='btn btn-outline-dark btn-block mt-3'>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userInfo: state.user.userInfo,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {editUser})(EditProfile);\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {getEvents} from '../../actions/events';\nimport Spinner from '../Spinner';\nimport Moment from 'react-moment';\n\n\n\nconst Events = ({events, getEvents}) => {\n\n    useEffect(()=>{\n        getEvents();\n    },[getEvents])\n\n    const imgStyle={\n        \"width\":\"100%\",\n        // \"width\":\"300px\",\n        \"height\":\"200px\",\n        \"objectFit\":\"cover\"\n    }\n\n    const tzText = timezone => {\n        switch(timezone){\n            case 'America/Chicago' : return 'CT'\n            case 'America/Los_Angeles' : return 'PT'\n            case 'America/New_York' : return 'ET'\n            case 'America/Denver' : return 'MT'\n            case 'America/Phoenix' : return 'MT'\n            default : return 'UNK'\n        }\n    }\n\n\n    const eventCard = (title, img, desc, link, time, timezone, location) => (\n        <div>\n        {/* <div>Event Card - {title}</div> */}\n        <div className=\"card text-center mb-4\">\n        <img className=\"card-img-top img-fluid\" style={imgStyle} src={img} alt=\"\" />\n        <div className=\"card-body\">\n            <h4 className=\"card-title mb-3 pb-2 border-bottom\">{title}</h4>\n            <div className=\"mb-2 text-muted text-left border-bottom\">\n            <i className=\"far fa-calendar-alt mr-2\"></i>\n            <Moment format=\"MMM DD, YY - h:mm A\">{time}</Moment>{` `} <span>{tzText(timezone)}</span>\n                <br/>\n                <p><i className=\"fas fa-map-marker-alt mr-2\"></i>{location}</p>\n            </div>\n\n            <p className=\"card-text text-left\">{desc ? desc : ' '}</p>\n        </div>\n    \n        <div className=\"card-footer\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" >More Info</a>\n        </div>\n        </div>\n        </div>\n    )\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <h4 className=\"display-4 mb-4 text-center\">Upcoming Events</h4>\n            {events.loading ? <Spinner /> : <div>\n                <div className=\"card-columns mt-5\">\n\n                {events.events.filter(event => event.venue.address.address_1).map(event => (\n                    <div key={event.id}> \n                        {eventCard(\n                            event.name.text, \n                            event.logo ? event.logo.url : ' ',\n                            // event.description.text,\n                            event.summary,\n                            event.url ? event.url : ' ',\n                            event.start.local,\n                            event.start.timezone,\n                            event.venue.address.address_1\n                            )}\n                    </div>\n                ))}\n\n                </div>\n            </div>}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.events\n})\n\nexport default connect(mapStateToProps, {getEvents})(Events)\n","//Libraries\nimport React from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n//Local components\nimport Layout from './components/Layout';\nimport store from './store';\nimport Signup from './components/Forms/Signup'\nimport Login from './components/Forms/Login';\nimport Profile from './components/Users/Profile';\nimport Navbar from './components/Navbar';\nimport Post from './components/Posts/Post';\nimport CreatePost from './components/Posts/CreatePost';\nimport EditPost from './components/Posts/EditPost';\nimport EditProfile from './components/Users/EditProfile';\nimport Events from './components/Events/Events.js'\n\n\nconst App = () => {\n    return (\n        <Provider store = {store}>\n            <Router> \n            <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Layout} />\n                    <Route exact path='/signup' component={Signup}/>\n                    <Route exact path='/login' component={Login}/>\n                    <Route exact path='/me' component={Profile}/>\n                    <Route exact path='/post/new' component={CreatePost} />\n                    <Route exact path='/post/:id' component={Post} />\n                    <Route exact path='/post/edit/:id' component={EditPost} />\n                    <Route exact path='/me/edit' component={EditProfile} />\n                    <Route exact path=\"/events\" component={Events} />\n                </Switch>\n            {/* <Footer /> */}\n            </Router>\n        </Provider>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n"],"sourceRoot":""}